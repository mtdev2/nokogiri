#@ load("@ytt:template", "template")

#@ load("ruby.star", "cruby_versions")
#@ all_cruby_versions = []
#@ all_cruby_versions.extend(cruby_versions["supported"])
#@ all_cruby_versions.extend(cruby_versions["beta"])

#@ load("ruby.star", "jruby_versions")
#@ all_jruby_versions = []
#@ all_jruby_versions.extend(jruby_versions["supported"])
#@ all_jruby_versions.extend(jruby_versions["beta"])

#@ load("ruby.star", "truffleruby_versions")
#@ all_truffleruby_versions = []
#@ all_truffleruby_versions.extend(truffleruby_versions["supported"])
#@ all_truffleruby_versions.extend(truffleruby_versions["beta"])

---
#@ def registry_image(image_repo, image_tag):
platform: linux
image_resource:
  type: registry-image
  source:
    repository: #@ image_repo
    tag: #@ image_tag
#@ end

---
#@ def task_inputs():
- name: ci
- name: nokogiri-pr
  path: nokogiri
#@ end

---
#@ def pend_pr(pr_resource_name, context):
put: #@ pr_resource_name
params:
  path: #@ pr_resource_name
  base_context: ci.nokogiri.org
  status: PENDING
  context: #@ context
  description: "Nokobot is working, beep boop ..."
#@ end

---
#@ def put_to_pr_on_everything(pr_resource_name, context):
on_failure:
  put: #@ pr_resource_name
  params:
    path: #@ pr_resource_name
    base_context: ci.nokogiri.org
    status: FAILURE
    context: #@ context
    description: "This job had some failed tests."
on_error:
  put: #@ pr_resource_name
  params:
    path: #@ pr_resource_name
    base_context: ci.nokogiri.org
    status: ERROR
    context: #@ context
    description: "This job had errors."
on_abort:
  put: #@ pr_resource_name
  params:
    path: #@ pr_resource_name
    base_context: ci.nokogiri.org
    status: ERROR
    context: #@ context
    description: "This job was terminated."
on_success:
  put: #@ pr_resource_name
  params:
    path: #@ pr_resource_name
    base_context: ci.nokogiri.org
    status: SUCCESS
    context: #@ context
    description: "Nokobot is happy with this job."
#@ end

---
% require "common_prelude.rb"

resource_types:
  - name: pull-request
    type: registry-image
    source:
      repository: teliaoss/github-pr-resource


resources:
  - name: ci
    type: git
    icon: cog
    source:
      uri: https://github.com/sparklemotion/nokogiri/
      branch: master
      disable_ci_skip: true #! always get the latest pipeline configuration
  - name: nokogiri-pr
    type: pull-request
    icon: github
    check_every: 15m
    webhook_token: ((nokogiri-pr-webhook-token))
    source:
      repository: sparklemotion/nokogiri
      access_token: ((github-repo-status-access-token))
      ignore_drafts: true
      ignore_paths:
        - "*.md"
        - "concourse/"
        - "suppressions/"
        - ".github/"
        - "Vagrantfile"


jobs:
#@ job_name = "rubocop"
  - name: #@ job_name
    public: true
    _: #@ template.replace(put_to_pr_on_everything("nokogiri-pr", job_name))
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
      - #@ pend_pr("nokogiri-pr", job_name)
      - task: rubocop
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "bionic"))
          inputs: #@ task_inputs()
          run:
            path: ci/concourse/tasks/rake-test/rubocop.sh


#@ job_name = "cruby-on-vanilla-ubuntu"
  - name: #@ job_name
    public: true
    _: #@ template.replace(put_to_pr_on_everything("nokogiri-pr", job_name))
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["rubocop"]
      - #@ pend_pr("nokogiri-pr", job_name)
      - task: rake-test
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "bionic"))
          inputs: #@ task_inputs()
          params:
            TEST_WITH_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
      - task: rake-test-32bit
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "bionic32"))
          inputs: #@ task_inputs()
          params:
            TEST_WITH_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


#@ for ruby_version in all_cruby_versions:
#@ job_name = "cruby-{}".format(ruby_version)
  - name: #@ job_name
    public: true
    _: #@ template.replace(put_to_pr_on_everything("nokogiri-pr", job_name))
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["cruby-on-vanilla-ubuntu"]
      - #@ pend_pr("nokogiri-pr", job_name)
      - task: rake-test-system-libraries
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(ruby_version)))
          inputs: #@ task_inputs()
          params:
            TEST_WITH_SYSTEM_LIBRARIES: t
            #@ if/end ruby_version == cruby_versions["supported"][-1]:
            CC_TEST_REPORTER_ID: ((code_climate_reporter_id_nokogiri))
          run:
            path: ci/concourse/tasks/rake-test/run.sh
      - task: rake-test-vendored-libraries
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(ruby_version)))
          inputs: #@ task_inputs()
          run:
            path: ci/concourse/tasks/rake-test/run.sh
      - task: rake-test-valgrind
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(ruby_version)))
          inputs: #@ task_inputs()
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
#@ end

#@ for ruby_version in all_jruby_versions:
#@ job_name = "jruby-{}".format(ruby_version)
  - name: #@ job_name 
    public: true
    #@ if/end ruby_version in jruby_versions["supported"]:
    _: #@ template.replace(put_to_pr_on_everything("nokogiri-pr", job_name))
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["cruby-on-vanilla-ubuntu"]
      - #@ pend_pr("nokogiri-pr", job_name)
      - task: rake-test
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "jruby-{}".format(ruby_version)))
          inputs: #@ task_inputs()
          run:
            path: ci/concourse/tasks/rake-test/run.sh
#@ end

#@ job_name = "cruby-on-musl"
  - name: #@ job_name
    public: true
    _: #@ template.replace(put_to_pr_on_everything("nokogiri-pr", job_name))
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        passed: #@ ["cruby-{}".format(ruby_version) for ruby_version in cruby_versions["supported"]]
      - #@ pend_pr("nokogiri-pr", job_name)
      - task: rake-test-system-libraries
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "alpine"))
          inputs: #@ task_inputs()
          params:
            TEST_WITH_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
      - task: rake-test-valgrind
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "alpine"))
          inputs: #@ task_inputs()
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


#@ job_name = "cruby-with-libxmlruby"
  - name: #@ job_name
    public: true
    _: #@ template.replace(put_to_pr_on_everything("nokogiri-pr", job_name))
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: #@ ["cruby-{}".format(ruby_version) for ruby_version in cruby_versions["supported"]]
      - #@ pend_pr("nokogiri-pr", job_name)
      - task: rake-test-system-libraries
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(cruby_versions["supported"][-1])))
          inputs: #@ task_inputs()
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            TEST_WITH_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
      - task: rake-test-valgrind
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(cruby_versions["supported"][-1])))
          inputs: #@ task_inputs()
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


#@ job_name = "cruby-gem-test"
  - name: #@ job_name
    public: true
    _: #@ template.replace(put_to_pr_on_everything("nokogiri-pr", job_name))
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: #@ ["cruby-{}".format(ruby_version) for ruby_version in cruby_versions["supported"]]
      - #@ pend_pr("nokogiri-pr", job_name)
      - task: build
        config:
          "_": #@ template.replace(registry_image("larskanis/rake-compiler-dock-mri-x86_64-linux", "<%= RakeCompilerDock::IMAGE_VERSION %>"))
          inputs: #@ task_inputs()
          outputs:
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-build.sh
      - in_parallel:
        - task: install-and-test
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(cruby_versions["supported"][-1])))
            inputs:
              - #@ template.replace(task_inputs())
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
        - task: install-and-test-on-musl
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "alpine"))
            inputs:
              - #@ template.replace(task_inputs())
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh


#@ job_name = "cruby-native-gem-test"
  - name: #@ job_name
    public: true
    _: #@ template.replace(put_to_pr_on_everything("nokogiri-pr", job_name))
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: #@ ["cruby-{}".format(ruby_version) for ruby_version in cruby_versions["supported"]]
      - #@ pend_pr("nokogiri-pr", job_name)
      - task: build
        config:
          "_": #@ template.replace(registry_image("larskanis/rake-compiler-dock-mri-x86_64-linux", "<%= RakeCompilerDock::IMAGE_VERSION %>"))
          inputs: #@ task_inputs()
          outputs:
            - name: gems
          params:
            BUILD_NATIVE_GEM: "x86_64-linux"
          run:
            path: ci/concourse/tasks/gem-test/gem-build.sh
      - in_parallel:
        <% $native_ruby_versions.each do |ruby_version| %>
        - task: install-and-test-<%= ruby_version %>
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-<%= ruby_version %>"))
            inputs:
              - #@ template.replace(task_inputs())
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
        <% end %>
        - task: install-and-test-on-musl
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "alpine"))
            inputs:
              - #@ template.replace(task_inputs())
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh


#@ job_name = "cruby-native-gem-test-32bit"
  - name: #@ job_name
    public: true
    _: #@ template.replace(put_to_pr_on_everything("nokogiri-pr", job_name))
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: #@ ["cruby-{}".format(ruby_version) for ruby_version in cruby_versions["supported"]]
      - #@ pend_pr("nokogiri-pr", job_name)
      - task: build
        config:
          "_": #@ template.replace(registry_image("larskanis/rake-compiler-dock-mri-x86-linux", "<%= RakeCompilerDock::IMAGE_VERSION %>"))
          inputs: #@ task_inputs()
          outputs:
            - name: gems
          params:
            BUILD_NATIVE_GEM: "x86-linux"
          run:
            path: ci/concourse/tasks/gem-test/gem-build.sh
      - in_parallel:
        - task: install-and-test-on-vanilla-ubuntu-32bit
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "bionic32"))
            inputs:
              - #@ template.replace(task_inputs())
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
        - task: install-and-test-on-musl-32bit
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "alpine32"))
            inputs:
              - #@ template.replace(task_inputs())
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh


#@ job_name = "jruby-gem-test"
  - name: #@ job_name
    public: true
    _: #@ template.replace(put_to_pr_on_everything("nokogiri-pr", job_name))
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: #@ ["jruby-{}".format(ruby_version) for ruby_version in jruby_versions["supported"]]
      - #@ pend_pr("nokogiri-pr", job_name)
      - task: build
        config:
          "_": #@ template.replace(registry_image("larskanis/rake-compiler-dock-jruby", "<%= RakeCompilerDock::IMAGE_VERSION %>"))
          inputs: #@ task_inputs()
          outputs:
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-build-java.sh
      - task: install-and-test
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "jruby-{}".format(jruby_versions["supported"][-1])))
          inputs:
            - #@ template.replace(task_inputs())
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-install-and-test.sh

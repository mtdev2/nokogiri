#@ load("@ytt:template", "template")

#@ load("ruby.star", "cruby_versions")
#@ all_cruby_versions = []
#@ all_cruby_versions.extend(cruby_versions["supported"])
#@ all_cruby_versions.extend(cruby_versions["beta"])

#@ load("ruby.star", "jruby_versions")
#@ all_jruby_versions = []
#@ all_jruby_versions.extend(jruby_versions["supported"])
#@ all_jruby_versions.extend(jruby_versions["beta"])

#@ load("ruby.star", "truffleruby_versions")
#@ all_truffleruby_versions = []
#@ all_truffleruby_versions.extend(truffleruby_versions["supported"])
#@ all_truffleruby_versions.extend(truffleruby_versions["beta"])

---
#@ def registry_image(image_repo, image_tag):
platform: linux
image_resource:
  type: registry-image
  source:
    repository: #@ image_repo
    tag: #@ image_tag
#@ end

---
#@ def notify_on_failure(job_name):
on_failure:
  in_parallel:
    - put: irc
      params: { message: "($BUILD_PIPELINE_NAME/$BUILD_JOB_NAME) The build failed ($BUILD_URL)" }
    - put: gitter
      params: { status: "failed" }
#@ end

---
#@ def task_inputs():
- name: ci
- name: nokogiri
#@ end

---
% require "common_prelude.rb"

resource_types:
  - name: irc-notification
    type: registry-image
    source:
      repository: flavorjones/irc-notification-resource
  - name: webhook-notification
    type: registry-image
    source:
      repository: flavorjones/webhook-notification-resource
      tag: latest

resources:
  - name: ci
    type: git
    icon: cog
    source:
      uri: https://github.com/sparklemotion/nokogiri/
      branch: master
      disable_ci_skip: true #! always get the latest pipeline configuration
  - name: irc
    type: irc-notification
    icon: bell
    source:
      server: chat.freenode.net
      port: 7070
      channel: "#nokogiri"
      user: ((nokobot-irc-username))
      password: ((nokobot-irc-password))
  - name: gitter
    type: webhook-notification
    icon: bell
    source:
      adapter: GitterActivityFeedAdapter
      url: ((nokogiri-gitter-channel-webhook-url))
  - name: nokogiri
    type: git
    icon: "github"
    check_every: 5m
    webhook_token: ((nokogiri-master-webhook-token))
    source:
      uri: https://github.com/sparklemotion/nokogiri/
      branch: master
      ignore_paths:
        - "*.md"
        - "concourse/**"
        - "suppressions/**"
        - ".github/**"
        - "Vagrantfile"


jobs:
#@ job_name = "rubocop"
  - name: #@ job_name
    public: true
    _: #@ template.replace(notify_on_failure(job_name))
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
      - task: rubocop
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "bionic"))
          inputs: [{name: ci}, {name: nokogiri}]
          run: {path: ci/concourse/tasks/rake-test/rubocop.sh}


#@ job_name = "cruby-on-vanilla-ubuntu"
  - name: #@ job_name
    public: true
    _: #@ template.replace(notify_on_failure(job_name))
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["rubocop"]
      - task: rake-test
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "bionic"))
          inputs: [{name: ci}, {name: nokogiri}]
          params: {TEST_WITH_SYSTEM_LIBRARIES: t}
          run: {path: ci/concourse/tasks/rake-test/run.sh}
      - task: rake-test-32bit
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "bionic32"))
          inputs: [{name: ci}, {name: nokogiri}]
          params: {TEST_WITH_SYSTEM_LIBRARIES: t}
          run: {path: ci/concourse/tasks/rake-test/run.sh}


#@ for ruby_version in all_cruby_versions:
#@ job_name = "cruby-{}".format(ruby_version)
  - name: #@ job_name
    public: true
    _: #@ template.replace(notify_on_failure(job_name))
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["cruby-on-vanilla-ubuntu"]
      - task: rake-test-system-libraries
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(ruby_version)))
          inputs: [{name: ci}, {name: nokogiri}]
          params:
            TEST_WITH_SYSTEM_LIBRARIES: t
            #@ if ruby_version == cruby_versions["supported"][-1]:
            CC_TEST_REPORTER_ID: ((code_climate_reporter_id_nokogiri))
            GIT_BRANCH: master
            #@ end
          run: {path: ci/concourse/tasks/rake-test/run.sh}
      - task: rake-test-vendored-libraries
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(ruby_version)))
          inputs: [{name: ci}, {name: nokogiri}]
          run: {path: ci/concourse/tasks/rake-test/run.sh}
      - task: rake-test-valgrind
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(ruby_version)))
          inputs: [{name: ci}, {name: nokogiri}]
          params: {TEST_WITH_VALGRIND: t}
          run: {path: ci/concourse/tasks/rake-test/run.sh}
#@ end


#@ for ruby_version in all_jruby_versions:
#@ job_name = "jruby-{}".format(ruby_version)
  - name: #@ job_name
    public: true
    _: #@ template.replace(notify_on_failure(job_name))
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["cruby-on-vanilla-ubuntu"]
      - task: rake-test
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "jruby-{}".format(ruby_version)))
          inputs: [{name: ci}, {name: nokogiri}]
          run: {path: ci/concourse/tasks/rake-test/run.sh}
#@ end


#@ job_name = "cruby-on-musl"
  - name: #@ job_name
    public: true
    _: #@ template.replace(notify_on_failure(job_name))
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: #@ ["cruby-{}".format(ruby_version) for ruby_version in cruby_versions["supported"]]
      - task: rake-test-system-libraries
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "alpine"))
          inputs: [{name: ci}, {name: nokogiri}]
          run: {path: ci/concourse/tasks/rake-test/run.sh}
          params: {TEST_WITH_SYSTEM_LIBRARIES: t}
      - task: rake-test-valgrind
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "alpine"))
          inputs: [{name: ci}, {name: nokogiri}]
          run: {path: ci/concourse/tasks/rake-test/run.sh}
          params: {TEST_WITH_VALGRIND: t}


#@ job_name = "cruby-with-libxmlruby"
  - name: #@ job_name
    public: true
    _: #@ template.replace(notify_on_failure(job_name))
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: #@ ["cruby-{}".format(ruby_version) for ruby_version in cruby_versions["supported"]]
      - task: rake-test-system-libraries
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(cruby_versions["supported"][-1])))
          inputs: [{name: ci}, {name: nokogiri}]
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            TEST_WITH_SYSTEM_LIBRARIES: t
          run: {path: ci/concourse/tasks/rake-test/run.sh}
      - task: rake-test-valgrind
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(cruby_versions["supported"][-1])))
          inputs: [{name: ci}, {name: nokogiri}]
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            TEST_WITH_VALGRIND: t
          run: {path: ci/concourse/tasks/rake-test/run.sh}


#@ job_name = "cruby-gem-test"
  - name: #@ job_name
    public: true
    _: #@ template.replace(notify_on_failure(job_name))
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: #@ ["cruby-{}".format(ruby_version) for ruby_version in cruby_versions["supported"]]
      - task: build
        config:
          "_": #@ template.replace(registry_image("larskanis/rake-compiler-dock-mri-x86_64-linux", "<%= RakeCompilerDock::IMAGE_VERSION %>"))
          inputs: [{name: ci}, {name: nokogiri}]
          outputs: [{name: gems}]
          run: {path: ci/concourse/tasks/gem-test/gem-build.sh}
      - in_parallel:
        - task: install-and-test
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-{}".format(cruby_versions["supported"][-1])))
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run: {path: ci/concourse/tasks/gem-test/gem-install-and-test.sh}
        - task: install-and-test-on-musl
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "alpine"))
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run: {path: ci/concourse/tasks/gem-test/gem-install-and-test.sh}


#@ job_name = "cruby-native-gem-test"
  - name: #@ job_name
    public: true
    _: #@ template.replace(notify_on_failure(job_name))
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        version: every
        passed: #@ ["cruby-{}".format(ruby_version) for ruby_version in cruby_versions["supported"]]
      - task: build
        config:
          "_": #@ template.replace(registry_image("larskanis/rake-compiler-dock-mri-x86_64-linux", "<%= RakeCompilerDock::IMAGE_VERSION %>"))
          inputs: [{name: ci}, {name: nokogiri}]
          outputs: [{name: gems}]
          params: {BUILD_NATIVE_GEM: "x86_64-linux"}
          run: {path: ci/concourse/tasks/gem-test/gem-build.sh}
      - in_parallel:
        <% $native_ruby_versions.each do |ruby_version| %>
        - task: install-and-test-<%= ruby_version %>
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "mri-<%= ruby_version %>"))
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run: {path: ci/concourse/tasks/gem-test/gem-install-and-test.sh}
        <% end %>
        - task: install-and-test-on-musl
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "alpine"))
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run: {path: ci/concourse/tasks/gem-test/gem-install-and-test.sh}


#@ job_name = "cruby-native-gem-test-32bit"
  - name: #@ job_name
    public: true
    _: #@ template.replace(notify_on_failure(job_name))
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        version: every
        passed: #@ ["cruby-{}".format(ruby_version) for ruby_version in cruby_versions["supported"]]
      - task: build
        config:
          "_": #@ template.replace(registry_image("larskanis/rake-compiler-dock-mri-x86-linux", "<%= RakeCompilerDock::IMAGE_VERSION %>"))
          inputs: [{name: ci}, {name: nokogiri}]
          outputs: [{name: gems}]
          params: {BUILD_NATIVE_GEM: "x86-linux"}
          run: {path: ci/concourse/tasks/gem-test/gem-build.sh}
      - in_parallel:
        - task: install-and-test-on-vanilla-ubuntu-32bit
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "bionic32"))
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run: {path: ci/concourse/tasks/gem-test/gem-install-and-test.sh}
        - task: install-and-test-on-musl-32bit
          config:
            "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "alpine32"))
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run: {path: ci/concourse/tasks/gem-test/gem-install-and-test.sh}


#@ job_name = "jruby-gem-test"
  - name: #@ job_name
    public: true
    _: #@ template.replace(notify_on_failure(job_name))
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: #@ ["jruby-{}".format(ruby_version) for ruby_version in jruby_versions["supported"]]
      - task: build
        config:
          "_": #@ template.replace(registry_image("larskanis/rake-compiler-dock-jruby", "<%= RakeCompilerDock::IMAGE_VERSION %>"))
          inputs: [{name: ci}, {name: nokogiri}]
          outputs: [{name: gems}]
          run: {path: ci/concourse/tasks/gem-test/gem-build-java.sh}
      - task: install-and-test
        config:
          "_": #@ template.replace(registry_image("flavorjones/nokogiri-test", "jruby-{}".format(jruby_versions["supported"][-1])))
          inputs:
            - name: ci
            - name: nokogiri
            - name: gems
          run: {path: ci/concourse/tasks/gem-test/gem-install-and-test.sh}


  - name: build-success
    public: true
    disable_manual_trigger: true
    plan:
      - get: nokogiri
        trigger: true
        version: every
        passed:
          - cruby-on-musl
          - cruby-with-libxmlruby
          - cruby-gem-test
          - cruby-native-gem-test
          - jruby-gem-test
      - put: irc
        params: {message: "($BUILD_PIPELINE_NAME/$BUILD_JOB_NAME) The build passed ($BUILD_URL)"}
      - put: gitter
        params: { status: "succeeded" }
